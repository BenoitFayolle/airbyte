version: "0.1.0"

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_railz_ai/schemas/{{ options['schema_name'] or options['name'] }}.json"
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_pointer: ['data']
  requester:
    type: HttpRequester
    url_base: "https://api.railz.ai/"
    http_method: "GET"
    authenticator:
      class_name: source_railz_ai.components.ShortLivedTokenAuthenticator
      url: "https://auth.railz.ai/getAccess"
      client_id: "{{ config.client_id }}"
      secret_key: "{{ config.secret_key }}"
      lifetime: "PT3600S"
  retriever:
    type: SimpleRetriever
    record_selector:
      $ref: "*ref(definitions.selector)"
    paginator:
      type: DefaultPaginator
      url_base: "*ref(definitions.requester.url_base)"
      page_size_option:
        inject_into: request_parameter
        field_name: "limit"
      pagination_strategy:
        type: OffsetIncrement
        page_size: 100
      page_token_option:
        inject_into: request_parameter
        field_name: "offset"
    requester:
      $ref: "*ref(definitions.requester)"

# Full Refresh Base
  base_stream:
    type: DeclarativeStream
    retriever:
      $ref: "*ref(definitions.retriever)"
    schema_loader:
      $ref: "*ref(definitions.schema_loader)"
  businesses_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "businesses"
      path: "/businesses"
    primary_key: "businessName"
  connections_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "connections"
      path: "/connections"
    primary_key: "connectionId"

# Internal stream for slicing
  connections_slice_stream:
    $ref: "*ref(definitions.base_stream)"
    retriever:
      $ref: "*ref(definitions.base_stream.retriever)"
      record_selector:
        $ref: "*ref(definitions.selector)"
        record_filter:
          condition: "{{ record.status in ['active', 'disconnected', 'expired'] and record.serviceName in options.serviceNames }}"
    $options:
      name: "connections_slice"
      path: "/connections"
    transformations:
      - type: AddFields
        fields:
          - path: ["slice_key", "businessName"]
            value: "{{ record.businessName }}"
          - path: ["slice_key", "serviceName"]
            value: "{{ record.serviceName }}"

# Full Refresh Service
  base_service_stream:
    $ref: "*ref(definitions.base_stream)"
    retriever:
      $ref: "*ref(definitions.base_stream.retriever)"
      requester:
        $ref: "*ref(definitions.requester)"
        request_options_provider:
          request_parameters:
            businessName: "{{ stream_slice.slice_key.businessName }}"
            serviceName: "{{ stream_slice.slice_key.serviceName }}"
      stream_slicer:
        type: SubstreamSlicer
        parent_stream_configs:
          - stream: "*ref(definitions.connections_slice_stream)"
            parent_key: "slice_key"
            stream_slice_field: "slice_key"
    transformations:
      - type: AddFields
        fields:
          - path: ["businessName"]
            value: "{{ stream_slice.slice_key.businessName }}"
          - path: ["serviceName"]
            value: "{{ stream_slice.slice_key.serviceName }}"

  customers_stream:
    $ref: "*ref(definitions.base_service_stream)"
    $options:
      name: "customers"
      path: "/customers"
      serviceNames: ["freshbooks", "quickbooks", "quickbooksDesktop", "xero", "oracleNetsuite", "sageBusinessCloud", "sageIntacct", "dynamicsBusinessCentral", "wave", "myob"]
    primary_key: "id"
  accounts_stream:
    $ref: "*ref(definitions.base_service_stream)"
    $options:
      name: "accounts"
      path: "/accounts"
      serviceNames: ["freshbooks", "quickbooks", "quickbooksDesktop", "xero", "oracleNetsuite", "sageBusinessCloud", "sageIntacct", "dynamicsBusinessCentral", "wave", "myob"]
    primary_key: "id"
  inventory_stream:
    $ref: "*ref(definitions.base_service_stream)"
    $options:
      name: "inventory"
      path: "/inventory"
      serviceNames: ["freshbooks", "quickbooks", "quickbooksDesktop", "xero", "oracleNetsuite", "sageBusinessCloud", "sageIntacct", "dynamicsBusinessCentral", "wave", "myob"]
    primary_key: "id"
  tax_rates_stream:
    $ref: "*ref(definitions.base_service_stream)"
    $options:
      name: "tax_rates"
      path: "/taxRates"
      serviceNames: ["freshbooks", "quickbooks", "quickbooksDesktop", "xero", "oracleNetsuite", "sageIntacct", "dynamicsBusinessCentral", "wave", "myob"]
    primary_key: "id"
  tracking_categories_stream:
    $ref: "*ref(definitions.base_service_stream)"
    $options:
      name: "tracking_categories"
      path: "/trackingCategories"
      serviceNames: ["freshbooks", "quickbooks", "quickbooksDesktop", "xero", "oracleNetsuite", "sageIntacct", "myob"]
    primary_key: "id"
  vendors_stream:
    $ref: "*ref(definitions.base_service_stream)"
    $options:
      name: "vendors"
      path: "/vendors"
      serviceNames: ["freshbooks", "quickbooks", "quickbooksDesktop", "xero", "oracleNetsuite", "sageBusinessCloud", "sageIntacct", "dynamicsBusinessCentral", "wave", "myob"]
    primary_key: "id"
  bank_accounts_stream:
    $ref: "*ref(definitions.base_service_stream)"
    $options:
      name: "bank_accounts"
      path: "/bankAccounts"
      serviceNames: ["plaid"]
    primary_key: "accountId"

streams:
  - "*ref(definitions.businesses_stream)"
  - "*ref(definitions.connections_stream)"
  - "*ref(definitions.customers_stream)"
  - "*ref(definitions.accounts_stream)"
  - "*ref(definitions.inventory_stream)"
  - "*ref(definitions.tax_rates_stream)"
  - "*ref(definitions.tracking_categories_stream)"
  - "*ref(definitions.vendors_stream)"
  - "*ref(definitions.bank_accounts_stream)"

check:
  stream_names:
    - "businesses"
